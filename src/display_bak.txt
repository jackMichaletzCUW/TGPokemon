import javax.sound.sampled.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Random;

public class display extends JFrame implements KeyListener
{
  Font poke;
  Font pokeb;
  
  Random randx = new Random();
  
  Icon bg;
  Icon bgd;
  Icon bgdb;
  Icon bgdn;
  Icon bg1;
  Icon tg;
  Icon bg2;
  Icon arrow;
  Icon tgcolor;
  Icon ms;
  Icon[] bar = new ImageIcon[2];
  
  String[] attacks = new String[16];
  String[] loc = new String[16];
  
  int[] attackStrength = new int[16];
  int[] buffer = new int[4];
  int count;
  int arrowPositDiag = 0;
  int health = 100;
  int ehealth = 100;
  int aNum = 0;
  int aCount = 0;
  int eCount = 0;
  int decount = 0;
  int fecount = 0;
  int wait = 0;
  
  boolean[] used = new boolean[16];
  boolean eAttacking = false;
  boolean isMSAppear = false;
  boolean isDiag = false;
  boolean isFight = false;
  boolean isItem = false;
  boolean isRun = false;
  boolean atPrompt = false;
  boolean attacking = false;
  
  Timer t;
  Timer fps;
  
  public display()
  {
    buffer[0] = 0;
    buffer[1] = 0;
    buffer[2] = 0;
    buffer[3] = 0;
    
    attacks[0] = "Buttfuck!";
    attacks[1] = "Bob Saget!";
    attacks[2] = "Go count your dick!";
    attacks[3] = "PISS!";
    attacks[4] = "Fuck you 3x in the ASS!";
    attacks[5] = "Lick my balls!";
    attacks[6] = "ROAR!";
    attacks[7] = "gr-uh!";
    attacks[8] = "Men's Asses!";
    attacks[9] = "Eat my short dick!";
    attacks[10] = "ASS! ASS! ASS!";
    attacks[11] = "You go to hell!";
    attacks[12] = "BALLS!";
    attacks[13] = "Fuck you kid, you're a dick!";
    attacks[14] = "Quit it!";
    attacks[15] = "SHUT UP!";
    
    loc[0] = "butt.wav";
    loc[1] = "ohbs.wav";
    loc[2] = "countit.wav";
    loc[3] = "piss.wav";
    loc[4] = "tgfufufua.wav";
    loc[5] = "lickit.wav";
    loc[6] = "uhh.wav";
    loc[7] = "groan.wav";
    loc[8] = "mensa.wav";
    loc[9] = "eatit.wav";
    loc[10] = "tripleass.wav";
    loc[11] = "gth.wav";
    loc[12] = "balls.wav";
    loc[13] = "fukid.wav";
    loc[14] = "qi.wav";
    loc[15] = "shutup.wav";
    
    //attackStrength[0] = 30;
    //attackStrength[1] = 15;
    //attackStrength[2] = 20;
    //attackStrength[3] = 10;
    //attackStrength[4] = 13;
    //attackStrength[5] = 9;
    //attackStrength[6] = 5;
    //attackStrength[7] = 8;
    //attackStrength[8] = 12;
    //attackStrength[9] = 25;
    //attackStrength[10] = 10;
    //attackStrength[11] = 4;
    //attackStrength[12] = 10;
    //attackStrength[13] = 23;
    //attackStrength[14] = 3;
    //attackStrength[15] = 16;
    
    attackStrength[0] = 15 + randx.nextInt(20);
    attackStrength[1] = randx.nextInt(25);
    attackStrength[2] = 15 + randx.nextInt(5);
    attackStrength[3] = randx.nextInt(20);
    attackStrength[4] = 15 + randx.nextInt(10);
    attackStrength[5] = 15 + randx.nextInt(5);
    attackStrength[6] = randx.nextInt(10);
    attackStrength[7] = randx.nextInt(15);
    attackStrength[8] = randx.nextInt(25);
    attackStrength[9] = 15 + randx.nextInt(15);
    attackStrength[10] = 5 + randx.nextInt(15);
    attackStrength[11] = randx.nextInt(10);
    attackStrength[12] = randx.nextInt(20);
    attackStrength[13] = 10 + randx.nextInt(20);
    attackStrength[14] = randx.nextInt(10);
    attackStrength[15] = 5 + randx.nextInt(20);
    
    for(int i = 0; i < 16; i++)
    {
      used[i] = false;
    }
    
    
    count = 0;
    poke = new Font("Pokemon D/P/P/t", Font.PLAIN, 16);
    pokeb = new Font("Pokemon D/P/P/t", Font.BOLD, 16);
    
    tg = new ImageIcon(getClass().getResource("tg.jpg"));
    bg = new ImageIcon(getClass().getResource("wild.jpg"));
    bgd = new ImageIcon(getClass().getResource("wilddiag.jpg"));
    bgdb = new ImageIcon(getClass().getResource("wildblur.png"));
    bgdn = new ImageIcon(getClass().getResource("wildneg.png"));
    bg1 = new ImageIcon(getClass().getResource("wild1.png"));
    bg2 = new ImageIcon(getClass().getResource("wild2.png"));
    arrow = new ImageIcon(getClass().getResource("arrow.jpg"));
    ms = new ImageIcon(getClass().getResource("ms.jpg"));
    tgcolor = new ImageIcon(getClass().getResource("tgcolor.jpg"));
    
    bar[0] = new ImageIcon(getClass().getResource("barright.jpg"));
    bar[1] = new ImageIcon(getClass().getResource("barleft.jpg"));
    
    this.setSize(638, 576);
        this.getContentPane().setBackground(Color.WHITE);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setVisible(true); 
        this.addKeyListener(this);
        
        start();
        
        try
    {
            Clip clip = AudioSystem.getClip();
            AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("background.wav"));
            clip.open(inputStream);
            clip.loop(clip.LOOP_CONTINUOUSLY);
            
          } catch (Exception e) {
            System.err.println(e.getMessage());
      }
  }
  
  public void start()
  {
    t = new javax.swing.Timer(100, new TimerHandler());
    fps = new javax.swing.Timer(50, new fpshand());
    
    t.start();
    fps.start();
  }
  
  public void attack(int attackNum)
  {
    aNum = attackNum;
    attacking = true;
    
    used[buffer[attackNum]] = true;
    
    try
    {
            Clip clip = AudioSystem.getClip();
            AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream(loc[buffer[attackNum]]));
            clip.open(inputStream);
            clip.start(); 
          } catch (Exception e) {
            System.err.println(e.getMessage());
      }
    
    /**if(aNum == 0)
    {
      try
      {
              Clip clip = AudioSystem.getClip();
              AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("eatit.wav"));
              clip.open(inputStream);
              clip.start(); 
            } catch (Exception e) {
              System.err.println(e.getMessage());
        }
    }
    else if(aNum == 1)
    {
      try
      {
              Clip clip = AudioSystem.getClip();
              AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("butt.wav"));
              clip.open(inputStream);
              clip.start(); 
            } catch (Exception e) {
              System.err.println(e.getMessage());
        }
    }
    else if(aNum == 2)
    {
      try
      {
              Clip clip = AudioSystem.getClip();
              AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("balls.wav"));
              clip.open(inputStream);
              clip.start(); 
            } catch (Exception e) {
              System.err.println(e.getMessage());
        }
    }
    else if(aNum == 3)
    {
      try
      {
              Clip clip = AudioSystem.getClip();
              AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("countit.wav"));
              clip.open(inputStream);
              clip.start();
              
            } catch (Exception e) {
              System.err.println(e.getMessage());
        }
    }**/

  }
  
  public void paint(Graphics g)
  {
    if(health > 0)
    {
      if(eAttacking)
      {
        isDiag = true;
        eCount++;
      }
      
      if(!isDiag)
      {
        bg.paintIcon(this, g, 0, 0);
      }
      else
      {
        atPrompt = true;
        bgd.paintIcon(this, g, 0, 0);
      }
      
      g.setFont(new Font("Pokemon TTF", Font.PLAIN, 24));   
      
      g.setColor(Color.BLACK);
      
      tg.paintIcon(this, g, 25, 150);
      
      //Draw hp levels and such
      bar[0].paintIcon(this, g, 15, 50);
      bar[1].paintIcon(this, g, 300, 300);
      
      g.drawString("MALL  SANTA", 30, 50);
      g.drawString("DANNY", 400, 275);
      
      g.setFont(pokeb);
      
      g.drawString("HP:", 50, 105);
      g.drawString("HP:", 350, 315);
      
      g.setColor(Color.BLUE);
      
      g.fillRect(100, 90, (ehealth * 2), 15);
      g.fillRect(400, 300, (health * 2), 15);
      
      g.setColor(Color.BLACK);
      
      g.drawString(String.format("%d/100", health), 450, 350);
      g.drawString(String.format("%d/100", ehealth), 150, 75);
      
      if(isMSAppear == true)
      {
        if(isDiag != true && isFight != true && isItem != true && isRun != true)
        {
          g.drawString("A  wild  MALL SANTA\nappeared!", 50, 450);
          arrow.paintIcon(this, g, 575, 525);
          atPrompt = true;
        }
        else if(isDiag == true)
        {
          atPrompt = true;
          
          if(arrowPositDiag == 0)
          {
            arrow.paintIcon(this, g, 340, 435);
          }
          else if(arrowPositDiag == 1)
          {
            arrow.paintIcon(this, g, 340, 490);
          }
          else if(arrowPositDiag == 2)
          {
            arrow.paintIcon(this, g, 465, 490);
          }
        }
        else if(isFight == true)
        {
          atPrompt = true;
          
          /**
          g.drawString("Eat my short dick!", 75, 435);
          g.drawString("Buttfuck!", 75, 465);
          g.drawString("You have balls!", 75, 490);
          g.drawString("Go count your dick!", 75, 515);
          **/
          
          g.drawString(attacks[buffer[0]], 75, 435);
          g.drawString(attacks[buffer[1]], 75, 465);
          g.drawString(attacks[buffer[2]], 75, 490);
          g.drawString(attacks[buffer[3]], 75, 515);
          
          g.drawString(String.format("%d" ,attackStrength[buffer[0]]), 550, 435);
          g.drawString(String.format("%d" ,attackStrength[buffer[1]]), 550, 465);
          g.drawString(String.format("%d" ,attackStrength[buffer[2]]), 550, 490);
          g.drawString(String.format("%d" ,attackStrength[buffer[3]]), 550, 515);
  
          if(arrowPositDiag == 0)
          {
            arrow.paintIcon(this, g, 50, 420);
          }
          else if(arrowPositDiag == 1)
          {
            arrow.paintIcon(this, g, 50, 450);
          }
          else if(arrowPositDiag == 2)
          {
            arrow.paintIcon(this, g, 50, 475);
          }
          else if(arrowPositDiag == 3)
          {
            arrow.paintIcon(this, g, 50, 500);
          }
        }
        
        if(eCount > 0)
        {
          if(eCount < 15)
          {
            //g.setColor(Color.RED);
            //g.fillRect(((10 - eCount) * 5) + 100, ((eCount) * 12) + 125, 15, 15);
          }
          else if(eCount < 20)
          {
            g.setColor(Color.RED);
            
            if(eCount % 2 == 0)
            {
              bgdb.paintIcon(this, g, 0, 0);
              ms.paintIcon(this, g, 400, 50);
            }
            else if(eCount % 3 == 0)
            {
              bgdn.paintIcon(this, g, 0, 0);
              ms.paintIcon(this, g, 400, 50);
            }
              
            /**for(int i = 0; i < 5; i++)
            {
              g.fill3DRect(randx.nextInt(500), randx.nextInt(500), randx.nextInt(25), randx.nextInt(25), true);
            }**/
          }
          else
          {
            health -= randx.nextInt(50);
            eCount = 0;
            eAttacking = false;
            isDiag = true;
            isFight = false;
            isItem = false;
            isRun = false;
            atPrompt = true;
            arrowPositDiag = 0;
            
            buffer[0] = 0;
            buffer[1] = 0;
            buffer[2] = 0;
            buffer[3] = 0;
            
            int rand = randx.nextInt(3);
            
            if(health > 0)
            {
              /**if(rand == 0)
              {
                try
                {
                        Clip clip = AudioSystem.getClip();
                        AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("tgfufufua.wav"));
                        clip.open(inputStream);
                        clip.start();
                        
                      } catch (Exception e) {
                        System.err.println(e.getMessage());
                  }
              }
              else if(rand == 1)
              {
                try
                {
                        Clip clip = AudioSystem.getClip();
                        AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("fuck.wav"));
                        clip.open(inputStream);
                        clip.start();
                        
                      } catch (Exception e) {
                        System.err.println(e.getMessage());
                  }
              }
              else if(rand == 2)
              {
                try
                {
                        Clip clip = AudioSystem.getClip();
                        AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("mensa.wav"));
                        clip.open(inputStream);
                        clip.start();
                        
                      } catch (Exception e) {
                        System.err.println(e.getMessage());
                  }
              }**/
            }
          }
        }
        
        if(ehealth > 0)
        {
          if(count < 15)
          {
            if(count % 2 != 0)
            {
              ms.paintIcon(this, g, 400, 50);
            }
          }
          else
          {
            if(attacking)
            {
              if(aCount < 20)
              {
                if(count % 2 == 0)
                {
                  ms.paintIcon(this, g, 400, 50);
                  bg1.paintIcon(this, g, 0, 0);
                  tgcolor.paintIcon(this, g, 25, 150);
                  
                  g.setFont(poke);
                  
                  g.drawString(attacks[buffer[0]], 75, 435);
                  g.drawString(attacks[buffer[1]], 75, 465);
                  g.drawString(attacks[buffer[2]], 75, 490);
                  g.drawString(attacks[buffer[3]], 75, 515);
                  
                  g.drawString(String.format("%d" ,attackStrength[buffer[0]]), 550, 435);
                  g.drawString(String.format("%d" ,attackStrength[buffer[1]]), 550, 465);
                  g.drawString(String.format("%d" ,attackStrength[buffer[2]]), 550, 490);
                  g.drawString(String.format("%d" ,attackStrength[buffer[3]]), 550, 515);
                  
                  aCount++;
                }
                else if(count % 3 == 0)
                {
                  bg2.paintIcon(this, g, 0, 0);
                  tgcolor.paintIcon(this, g, 25, 150);
                  
                  g.setFont(poke);
                  
                  g.drawString(attacks[buffer[0]], 75, 435);
                  g.drawString(attacks[buffer[1]], 75, 465);
                  g.drawString(attacks[buffer[2]], 75, 490);
                  g.drawString(attacks[buffer[3]], 75, 515);
                  
                  g.drawString(String.format("%d" ,attackStrength[buffer[0]]), 550, 435);
                  g.drawString(String.format("%d" ,attackStrength[buffer[1]]), 550, 465);
                  g.drawString(String.format("%d" ,attackStrength[buffer[2]]), 550, 490);
                  g.drawString(String.format("%d" ,attackStrength[buffer[3]]), 550, 515);
                  
                  
                  aCount++;
                }
                
                g.setFont(new Font("Pokemon TTF", Font.PLAIN, 24));   
                
                g.setColor(Color.BLACK);
                
                bar[0].paintIcon(this, g, 15, 50);
                bar[1].paintIcon(this, g, 300, 300);
                
                g.drawString("MALL  SANTA", 30, 50);
                g.drawString("DANNY", 400, 275);
                
                g.setFont(pokeb);
                
                g.drawString("HP:", 50, 105);
                g.drawString("HP:", 350, 315);
                
                g.setColor(Color.BLUE);
                
                g.fillRect(100, 90, (ehealth * 2), 15);
                g.fillRect(400, 300, (health * 2), 15);
                
                g.setColor(Color.BLACK);
                
                g.drawString(String.format("%d/100", health), 450, 350);
                g.drawString(String.format("%d/100", ehealth), 150, 75);
              }
              else
              {
                ms.paintIcon(this, g, 400, 50);
                attacking = false;
                aCount = 0;
                
                ehealth -= attackStrength[buffer[aNum]];
                
                //int rand = randx.nextInt(3);
                
                if(ehealth > 0)
                {
                  if(attacks[buffer[aNum]].contains("fuck") || attacks[buffer[aNum]].contains("Fuck") || attacks[buffer[aNum]].contains("FUCK"))
                  {
                    try
                    {
                            Clip clip = AudioSystem.getClip();
                            AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("tgdadfu.wav"));
                            clip.open(inputStream);
                            clip.start();
                            
                          } catch (Exception e) {
                            System.err.println(e.getMessage());
                      }
                  }
                  else if(attackStrength[buffer[aNum]] > 15)
                  {
                    try
                    {
                            Clip clip = AudioSystem.getClip();
                            AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("tgdadgdshit.wav"));
                            clip.open(inputStream);
                            clip.start();
                            
                          } catch (Exception e) {
                            System.err.println(e.getMessage());
                      }
                  }
                  else
                  {
                    try
                    {
                            Clip clip = AudioSystem.getClip();
                            AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("tgdadguh.wav"));
                            clip.open(inputStream);
                            clip.start();
                            
                          } catch (Exception e) {
                            System.err.println(e.getMessage());
                      }
                  }
                }
                      
                  eAttacking = true;
              }
              
              //g.setColor(Color.GREEN);
              //g.fillRect(((aCount) * 15) + 125, ((10 - aCount) * 5) + 200, 15, 15);
            }
            else
            {
              ms.paintIcon(this, g, 400, 50);
            }
          }
        }
        else
        {
          if(fecount == 0)
          {
            try
            {
                    Clip clip = AudioSystem.getClip();
                    AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("tgdadhateshit.wav"));
                    clip.open(inputStream);
                    clip.start();
                    
                  } catch (Exception e) {
                    System.err.println(e.getMessage());
              }
          }
          else
          {
            
          }
          
          g.setColor(Color.WHITE);
          g.fillRect(0, 0, 640, 640);
          
          g.setFont(new Font("Pokemon TTF", Font.BOLD, 72));
          g.setColor(Color.BLACK);
          g.drawString("You won!", 50, 250);
          
          fps.stop();
          t.stop();
          
          fecount++;
        }
      }
    }
    else
    {
      g.setColor(Color.WHITE);
      g.fillRect(0, 0, 640, 640);
      
      g.setFont(new Font("Pokemon TTF", Font.BOLD, 72));
      g.setColor(Color.BLACK);
      g.drawString("You suck!", 50, 250);
      
      fps.stop();
      t.stop();
      
      if(decount == 0)
      {
        try
        {
                Clip clip = AudioSystem.getClip();
                AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("hitdick.wav"));
                clip.open(inputStream);
                clip.start();
                
          } 
        catch (Exception e)
          {
                System.err.println(e.getMessage());
          }
      }
      
      decount++;
    }
  }
  
  
  public void keyPressed( KeyEvent e )
  {
    if(e.getKeyCode() == e.VK_UP)
    {
      if(isDiag == true || isFight == true)
      {
        if(arrowPositDiag > 0)
        {
          arrowPositDiag--;
        }
      }
    }
    else if(e.getKeyCode() == e.VK_DOWN)
    {
      if(isDiag)
      {
        if(arrowPositDiag < 2)
        { 
          arrowPositDiag++;
        }
      }
      else if(isFight)
      {
        if(arrowPositDiag < 3)
        {
          arrowPositDiag++;
        }
      }
    }
    else if(e.getKeyCode() == e.VK_ENTER)
    {
      if(atPrompt)
      {
        if(isDiag == false && isFight == false && isItem == false && isRun == false)
        {
          isDiag = true;
          atPrompt = false;
        }
        else if(isDiag == true && isFight == false && isItem == false && isRun == false)
        {
          if(arrowPositDiag == 0)
          {
            for(int i = 0; i < 4; i++)
            {
              buffer[i] = randx.nextInt(16);
              
              if(used[buffer[i]] == true)
              {
                buffer[i] = randx.nextInt(16);
              }
              
              for(int it = 0; it < i; it++)
              {
                if(buffer[it] == buffer[i])
                {
                  buffer[i] = randx.nextInt(16);
                }
              }
            }
            
            isFight = true;
            isDiag = false;
            atPrompt = false;
          }
          else if(arrowPositDiag == 1)
          {
            isItem = true;
            isDiag = false;
            atPrompt = false;
          }
          else if(arrowPositDiag == 2)
          {
            isRun = true;
            isDiag = false;
            atPrompt = false;
          }
          
          arrowPositDiag = 0;
        }
        else if(isDiag == false && isFight == true && isItem == false && isRun == false)
        {
          attack(arrowPositDiag);
        }
      }
      
    }
  }
  
  public void keyTyped( KeyEvent e )
  {
    
  }
  
  public void keyReleased( KeyEvent e )
  {
    
  }
  
  public class TimerHandler implements ActionListener
  {
    public void actionPerformed( ActionEvent a )
    {
      if(count > 5)
      {
        isMSAppear = true;
      }
      
      if(count == 5)
      {
        try
        {
                Clip clip = AudioSystem.getClip();
                AudioInputStream inputStream = AudioSystem.getAudioInputStream(main.class.getResourceAsStream("tgdadtalkshit.wav"));
                clip.open(inputStream);
                clip.start();
                
              } catch (Exception e) {
                System.err.println(e.getMessage());
          }
      }
      
      count++;
    }
  }
  
  public class fpshand implements ActionListener
  {
    public void actionPerformed( ActionEvent a )
    {
      repaint();
    }
  }
}